services:
  db:
    image: postgres:17.5-alpine3.21
    container_name: ${TODOSAPP_DB_HOST}
    restart: always
    environment:
      - POSTGRES_DB=${TODOSAPP_DB_NAME}
      - POSTGRES_USER=${TODOSAPP_DB_USERNAME}
      - POSTGRES_PASSWORD=${TODOSAPP_DB_PASSWORD}
    networks:
      - app-net
    volumes:
      - app-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${TODOSAPP_DB_NAME} -U ${TODOSAPP_DB_USERNAME}" ]
      interval: 2s
      timeout: 10s
      retries: 10
      start_period: 2s

  backend:
    image: ${TODOSAPP_API_IMAGE_NAME}
    container_name: todosapp_api
    restart: always
    environment:
      - DB_HOST=${TODOSAPP_DB_HOST}
      - DB_PORT=${TODOSAPP_DB_PORT}
      - DB_NAME=${TODOSAPP_DB_NAME}
      - DB_USERNAME=${TODOSAPP_DB_USERNAME}
      - DB_PASSWORD=${TODOSAPP_DB_PASSWORD}
      - ADMIN_SECRET=${TODOSAPP_ADMIN_SECRET}
    networks:
      - app-net
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider http://localhost:8080/health" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s

  frontend:
    image: ${TODOSAPP_APP_IMAGE_NAME}
    container_name: todosapp_app
    restart: always
    networks:
      - app-net
    ports:
      - ${TODOSAPP_APP_PORT}:80
    depends_on:
      backend:
        condition: service_healthy

networks:
  app-net:
volumes:
  app-data:
